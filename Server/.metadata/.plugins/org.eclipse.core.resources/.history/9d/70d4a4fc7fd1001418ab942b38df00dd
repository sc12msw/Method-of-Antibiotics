package com.watson.jersey.cfmed;

import java.sql.*;

public class DBManager {
	// JDBC driver name and database URL
	static final String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
	static final String DB_URL = "jdbc:mysql://localhost/CFMedDB";

	//  Database credentials
	static final String USER = "admin";
	static final String PASS = "#S3cret999";

	public void addDrug(DrugInfo drug) {
		Connection conn = null;
		Statement stmt = null;
		PreparedStatement preparedStatement = null;
		try{
			// Register JDBC driver
			Class.forName("com.mysql.jdbc.Driver");

			// Create a connection
			conn = DriverManager.getConnection(DB_URL,USER,PASS);

			//creates query to add object to database
			System.out.println("Creating statement...");
			stmt = conn.createStatement();
			String sql;

			//Drug init block, the following code sets the basic data for the drug in the database.
			preparedStatement = conn.prepareStatement("insert into  Drugs (Name,Indication,Side_Effects) values (?, ?, ?)");
			preparedStatement.setString(1, drug.getName());
			preparedStatement.setString(2, drug.getIndication());
			preparedStatement.setString(3, drug.getSideEffect());
			preparedStatement.executeUpdate();

			//Adult administration section, the following block is how the adult administration data is added to the database.   
			AdultInfo adult=drug.getAdult();
			AdminDose oral = adult.getOral();
			AdminDose iv = adult.getIV();
			AdminDose inhaled = adult.getInhaled();
			AdminDose im = adult.getIM();
			AdminDose pr = adult.getPR();
			AdminDose sc = adult.getSC();

			preparedStatement = conn.prepareStatement("insert into  Adult_Administration (Oral,IV,Inhaled,IM,PR,SC) values (?, ?, ?, ?, ?, ?)");
			if (oral == null){ 
				preparedStatement.setString(1,"NULL"); 
			}else{
				preparedStatement.setString(1, oral.getAdministration());
			}
			if (iv == null){ 
				preparedStatement.setString(2,"NULL"); 
			}else{
				preparedStatement.setString(2, iv.getAdministration());
			}
			if (inhaled == null){ 
				preparedStatement.setString(3,"NULL"); 
			}else{
				preparedStatement.setString(3, inhaled.getAdministration());
			}
			if (im == null){ 
				preparedStatement.setString(4,"NULL"); 
			}else{
				preparedStatement.setString(4, im.getAdministration());
			}
			if (pr == null){ 
				preparedStatement.setString(5,"NULL"); 
			}else{
				preparedStatement.setString(5, pr.getAdministration());
			}
			if (sc == null){ 
				preparedStatement.setString(6,"NULL"); 
			}else{
				preparedStatement.setString(6, sc.getAdministration());
			}
			preparedStatement.executeUpdate();   

			//Adult dose section, the following block is how the adult dose data is added to the database.   
			preparedStatement = conn.prepareStatement("insert into  Adult_Dose (Oral,IV,Inhaled,IM,PR,SC) values (?, ?, ?, ?, ?, ?)");
			if (oral == null){ 
				preparedStatement.setString(1,"NULL"); 
			}else{
				preparedStatement.setString(1, oral.getDose());
			}
			if (iv == null){ 
				preparedStatement.setString(2,"NULL"); 
			}else{
				preparedStatement.setString(2, iv.getDose());
			}
			if (inhaled == null){ 
				preparedStatement.setString(3,"NULL"); 
			}else{
				preparedStatement.setString(3, inhaled.getDose());
			}
			if (im == null){ 
				preparedStatement.setString(4,"NULL"); 
			}else{
				preparedStatement.setString(4, im.getDose());
			}
			if (pr == null){ 
				preparedStatement.setString(5,"NULL"); 
			}else{
				preparedStatement.setString(5, pr.getDose());
			}
			if (sc == null){ 
				preparedStatement.setString(6,"NULL"); 
			}else{
				preparedStatement.setString(6, sc.getDose());
			}
			preparedStatement.executeUpdate();   


			// Paediatric administration section, the following block is how the adult administration data is added to the database.   
			PaediatricInfo paed=drug.getPaediatric();
			oral = paed.getOral();
			iv = paed.getIV();
			inhaled = paed.getInhaled();
			im = paed.getIM();
			pr = paed.getPR();
			sc = paed.getSC();
			preparedStatement = conn.prepareStatement("insert into  Paediatric_Administration (Oral,IV,Inhaled,IM,PR,SC) values (?, ?, ?, ?, ?, ?)");
			if (oral == null){ 
				preparedStatement.setString(1,"NULL"); 
			}else{
				preparedStatement.setString(1, oral.getAdministration());
			}
			if (iv == null){ 
				preparedStatement.setString(2,"NULL"); 
			}else{
				preparedStatement.setString(2, iv.getAdministration());
			}
			if (inhaled == null){ 
				preparedStatement.setString(3,"NULL"); 
			}else{
				preparedStatement.setString(3, inhaled.getAdministration());
			}
			if (im == null){ 
				preparedStatement.setString(4,"NULL"); 
			}else{
				preparedStatement.setString(4, im.getAdministration());
			}
			if (pr == null){ 
				preparedStatement.setString(5,"NULL"); 
			}else{
				preparedStatement.setString(5, pr.getAdministration());
			}
			if (sc == null){ 
				preparedStatement.setString(6,"NULL"); 
			}else{
				preparedStatement.setString(6, sc.getAdministration());
			}
			preparedStatement.executeUpdate();   

			//Paediatric dose section, the following block is how the paediatric dose data is added to the database.   
			preparedStatement = conn.prepareStatement("insert into  Paediatric_Dose (Oral,IV,Inhaled,IM,PR,SC) values (?, ?, ?, ?, ?, ?)");
			if (oral == null){ 
				preparedStatement.setString(1,"NULL"); 
			}else{
				preparedStatement.setString(1, oral.getDose());
			}
			if (iv == null){ 
				preparedStatement.setString(2,"NULL"); 
			}else{
				preparedStatement.setString(2, iv.getDose());
			}
			if (inhaled == null){ 
				preparedStatement.setString(3,"NULL"); 
			}else{
				preparedStatement.setString(3, inhaled.getDose());
			}
			if (im == null){ 
				preparedStatement.setString(4,"NULL"); 
			}else{
				preparedStatement.setString(4, im.getDose());
			}
			if (pr == null){ 
				preparedStatement.setString(5,"NULL"); 
			}else{
				preparedStatement.setString(5, pr.getDose());
			}
			if (sc == null){ 
				preparedStatement.setString(6,"NULL"); 
			}else{
				preparedStatement.setString(6, sc.getDose());
			}
			preparedStatement.executeUpdate();


			sql = "SELECT * FROM Adult_Administration";
			ResultSet rs = stmt.executeQuery(sql);

			//STEP 5: Extract data from result set
			while(rs.next()){
				//Retrieve by column name
				int id  = rs.getInt("ID");
				String name = rs.getString("Oral");
				String indication = rs.getString("IV");
				String sideEffects = rs.getString("Inhaled");

				//Display values
				System.out.print("ID: " + id);
				System.out.print(", Name: " + name);
				System.out.print(", Indication: " + indication);
				System.out.println(", Side Effects: " + sideEffects);
			}
			//STEP 6: Clean-up environment
			rs.close();
			stmt.close();
			conn.close();
		}catch(SQLException se){
			//Handle errors for JDBC
			se.printStackTrace();
		}catch(Exception e){
			//Handle errors for Class.forName
			e.printStackTrace();
		}finally{
			//finally block used to close resources
			try{
				if(stmt!=null)
					stmt.close();
			}catch(SQLException se2){
			}// nothing we can do
			try{
				if(conn!=null)
					conn.close();
			}catch(SQLException se){
				se.printStackTrace();
			}//end finally try
		}//end try
		System.out.println("Goodbye!");
	}//end main
}//end FirstExample

